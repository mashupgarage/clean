# Generated by Django 4.2.6 on 2024-04-10 07:50

import dispenser.models
import dispenser.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DrinkDispensingProcess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dispenser_name",
                    models.CharField(default="dispenserA", max_length=50),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("total_time", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("url", models.CharField(blank=True, max_length=200, null=True)),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="VendingMachine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("versionS", models.IntegerField(default=0)),
                ("versionH", models.IntegerField(default=0)),
                ("port", models.IntegerField(default=8000)),
                ("font_name", models.CharField(default="Roboto Mono", max_length=100)),
                ("background_color", models.CharField(default="#FFFFFF", max_length=7)),
                (
                    "background_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=dispenser.models.machine_image_upload_path,
                        validators=[
                            dispenser.validators.validate_machine_image_size,
                            dispenser.validators.validate_image_file_extension,
                        ],
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="machines",
                        to="dispenser.store",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dispenser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "dispense_time",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=2),
                ),
                ("flow_rate", models.FloatField(default=0.0)),
                ("temperature", models.FloatField(default=20.0)),
                ("target_temperature", models.FloatField(default=20.0)),
                ("temperature_tolerance", models.FloatField(default=4.0)),
                (
                    "cup_status",
                    models.CharField(
                        choices=[
                            ("Not Detected", "Not Detected"),
                            ("Detected", "Detected"),
                            ("Magnetic", "Magnetic"),
                            ("Infrared", "Infrared"),
                            ("Both", "Both"),
                        ],
                        default="Not Detected",
                        max_length=20,
                    ),
                ),
                ("inventory", models.IntegerField(default=0)),
                ("heater_strength", models.IntegerField(default=0)),
                ("cleaner_mode", models.IntegerField(default=1)),
                ("cleaner_on", models.BooleanField(default=False)),
                (
                    "dispenser_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=dispenser.models.dispenser_image_upload_path,
                        validators=[
                            dispenser.validators.validate_dispenser_image_size,
                            dispenser.validators.validate_image_file_extension,
                        ],
                    ),
                ),
                (
                    "drink_size",
                    models.CharField(
                        choices=[
                            ("Small", "Small"),
                            ("Medium", "Medium"),
                            ("Large", "Large"),
                        ],
                        default="Small",
                        max_length=10,
                    ),
                ),
                ("drink_name", models.CharField(default="Coffee", max_length=250)),
                (
                    "drink_name2",
                    models.CharField(blank=True, default="", max_length=250),
                ),
                (
                    "price_small",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "price_medium",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "price_large",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                ("volume_small", models.FloatField(default=0.0)),
                ("volume_medium", models.FloatField(default=0.0)),
                ("volume_large", models.FloatField(default=0.0)),
                ("SKU", models.CharField(blank=True, max_length=120)),
                (
                    "drink_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=dispenser.models.drink_image_upload_path,
                        validators=[
                            dispenser.validators.validate_drink_image_size,
                            dispenser.validators.validate_image_file_extension,
                        ],
                    ),
                ),
                (
                    "vending_machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dispensers",
                        to="dispenser.vendingmachine",
                    ),
                ),
            ],
        ),
    ]
