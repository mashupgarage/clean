# Generated by Django 4.2.6 on 2024-06-20 13:08

import dispenser.models
import dispenser.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dispenser', '0006_delete_drinkdispensingprocess_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='dispenser',
            name='cleaner_on',
        ),
        migrations.RemoveField(
            model_name='dispenser',
            name='dispense_time',
        ),
        migrations.RemoveField(
            model_name='dispenser',
            name='flow_rate',
        ),
        migrations.RemoveField(
            model_name='dispenser',
            name='inventory',
        ),
        migrations.RemoveField(
            model_name='dispenser',
            name='volume_large',
        ),
        migrations.RemoveField(
            model_name='dispenser',
            name='volume_small',
        ),
        migrations.AddField(
            model_name='dispenser',
            name='cleaner_status',
            field=models.BooleanField(default=False, help_text='The status of the cleaner: False (off), True (on).'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='dispense_status',
            field=models.BooleanField(default=False, help_text='The status of the dispenser: False (off), True (on).'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='dispense_time_large',
            field=models.FloatField(default=0.0, help_text='The duration of dispensing the large drink in seconds (0 to 20).', validators=[dispenser.models.validate_dispense_time]),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='dispense_time_small',
            field=models.FloatField(default=0.0, help_text='The duration of dispensing the small drink in seconds (0 to 20).', validators=[dispenser.models.validate_dispense_time]),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='empty_thermos_weight',
            field=models.FloatField(default=0.0, help_text='The weight of the empty thermos in grams.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='heater_status',
            field=models.BooleanField(default=False, help_text='The status of the heater: False (off), True (on).'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='max_distance',
            field=models.FloatField(default=0.0, help_text='Maximum distance for sensing.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='min_distance',
            field=models.FloatField(default=0.0, help_text='Minimum distance for sensing.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='minimum_thermos_weight',
            field=models.FloatField(default=0.0, help_text='The minimum weight of the thermos in grams.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='temperature_regulation',
            field=models.BooleanField(default=False, help_text='Whether to do temperature regulation: False (off), True (on).'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='thermos_weight',
            field=models.FloatField(default=0, help_text='The current weight of the thermos in grams.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='weight_large',
            field=models.FloatField(default=0.0, help_text='The weight of the large drink in grams.'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='weight_small',
            field=models.FloatField(default=0.0, help_text='The weight of the small drink in grams.'),
        ),
        migrations.AddField(
            model_name='vendingmachine',
            name='is_setting_up',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vendingmachine',
            name='post_notifications',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='SKU',
            field=models.CharField(blank=True, help_text='The stock keeping unit.', max_length=120),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='cleaner_mode',
            field=models.IntegerField(default=1, help_text='The mode of the cleaner: 0 (off), 1, 2, or 3.'),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='cup_status',
            field=models.CharField(choices=[('Not Detected', 'Not Detected'), ('Detected', 'Detected')], default='Not Detected', help_text='The status of the cup.', max_length=20),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='dispenser_image',
            field=models.ImageField(blank=True, help_text='The image of the dispenser.', null=True, upload_to=dispenser.models.dispenser_image_upload_path, validators=[dispenser.validators.validate_dispenser_image_size, dispenser.validators.validate_image_file_extension]),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='drink_image',
            field=models.ImageField(blank=True, help_text='The image of the drink.', null=True, upload_to=dispenser.models.drink_image_upload_path, validators=[dispenser.validators.validate_drink_image_size, dispenser.validators.validate_image_file_extension]),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='drink_name',
            field=models.CharField(default='Coffee', help_text='The name of the drink.', max_length=250),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='drink_name2',
            field=models.CharField(blank=True, default='', help_text='The secondary name of the drink.', max_length=250),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='drink_size',
            field=models.CharField(choices=[('Small', 'Small'), ('Large', 'Large')], default='Small', help_text="The size of the drink: 'Small' or 'Large'.", max_length=10),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='heater_cycle_time',
            field=models.IntegerField(default=0, help_text='Heating Cycle Time in seconds (N x 4).'),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='heater_strength',
            field=models.IntegerField(default=0, help_text='The strength of the heater: 0 (off), 1 (25% ON), 2 (50% ON), 3 (100% ON).'),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='price_large',
            field=models.DecimalField(decimal_places=2, default=1.0, help_text='The price of the large drink.', max_digits=5),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='price_small',
            field=models.DecimalField(decimal_places=2, default=1.0, help_text='The price of the small drink.', max_digits=5),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='target_temperature',
            field=models.FloatField(default=20.0, help_text='The target temperature of the drink in Celsius.', validators=[dispenser.models.validate_temperature]),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='temperature',
            field=models.FloatField(default=20.0, help_text='The temperature of the drink in Celsius.', validators=[dispenser.models.validate_temperature]),
        ),
        migrations.AlterField(
            model_name='dispenser',
            name='temperature_tolerance',
            field=models.FloatField(default=4.0, help_text='The tolerance of the temperature in Celsius.'),
        ),
        migrations.AlterField(
            model_name='store',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
    ]
